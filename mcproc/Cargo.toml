[package]
name = "mcproc"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true

[[bin]]
name = "mcproc"
path = "src/main.rs"

[dependencies]
# From mcprocd
proto = { path = "../proto" }
mcp-rs = { path = "../mcp-rs" }

# Async runtime
tokio.workspace = true

# gRPC
tonic.workspace = true

# Process management
dashmap.workspace = true
regex.workspace = true

# Logging
tracing.workspace = true
tracing-subscriber.workspace = true
flexi_logger.workspace = true

# Ring buffer
ringbuf.workspace = true

# CLI
clap.workspace = true

# Serialization
serde.workspace = true
serde_json.workspace = true

# Error handling
thiserror.workspace = true
anyhow.workspace = true

# Async trait
async-trait.workspace = true

# UUID
uuid.workspace = true

# Date/time
chrono.workspace = true

# Database
sqlx.workspace = true

# Path handling
dirs.workspace = true

# HTTP/WebSocket (for MCP server)
warp.workspace = true
tokio-tungstenite.workspace = true

# JSON-RPC (for MCP)
jsonrpc-v2.workspace = true

# Additional dependencies
tokio-stream.workspace = true
log.workspace = true
colored = "2.2"
tabled = "0.18"
async-stream = "0.3"
prost-types.workspace = true

# Platform specific
[target.'cfg(unix)'.dependencies]
nix = { version = "0.29", features = ["signal", "process"] }

[dev-dependencies]
mockall.workspace = true