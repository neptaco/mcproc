name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build release binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: mcproc
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: mcproc
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: mcproc
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary_name: mcproc

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install protobuf compiler
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            brew install protobuf
          else
            sudo apt-get update
            sudo apt-get install -y protobuf-compiler
          fi

      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: |
          if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
            export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
          fi
          cargo build --release --target ${{ matrix.target }}

      - name: Package
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.binary_name }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz ${{ matrix.binary_name }}
          cd ../../..
          shasum -a 256 ${{ matrix.binary_name }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz > ${{ matrix.binary_name }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}-${{ matrix.target }}
          path: |
            ${{ matrix.binary_name }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz
            ${{ matrix.binary_name }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz.sha256

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true

  update-homebrew:
    name: Update Homebrew Formula
    needs: release
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger Homebrew tap update
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          repository: neptaco/homebrew-tap
          event-type: update-formula
          client-payload: '{"formula": "mcproc", "version": "${{ github.ref_name }}"}'